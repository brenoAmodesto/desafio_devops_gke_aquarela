name: "GKE"

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read
  pull-requests: write
env:
  TF_LOG: INFO

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:


    - id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v2'
      with:
        version: '>= 363.0.0'
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.9.0
        terraform_wrapper: false
    
    - name: terraform init & apply
      run: terraform init && apply
    
    - name: 'Use gcloud CLI'
      run: 'gcloud info'
    
    - name: instalando components / ter acesso ao cluster
      run: gcloud components install gke-gcloud-auth-plugin

    - name: gpg key package
      run: curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/cloud.google.gpg
    
    - name: gcloud cli distrib
      run: echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
 
    - name: fetch do cluster auth
      run: gcloud container clusters get-credentials meu-cluster-autopilot --region southamerica-east1

    - name: kubectl get namespaces
      run: kubectl get namespaces
    
    - name: ativando api
      run:  gcloud services enable monitoring.googleapis.com && gcloud services enable container.googleapis.com
    
    - name: managed prometheus
      run: gcloud container clusters update meu-cluster-autopilot \
        --region=southamerica-east1 \
        --enable-managed-prometheus
    
    - name: kubectl apply
      run:  kubectl apply -f agent.yaml

    - name: Setup Helm
      uses: WyriHaximus/github-action-helm3@v3

    - name: grafana
      run: helm repo add grafana https://grafana.github.io/helm-charts \ &&
        helm install grafana grafana/grafana --namespace monitoring --create-namespace

